- name: Install curl and gpg
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present

- name: Turn off swap
  command: swapoff -a
  ignore_errors: yes

- name: Remove swap
  command: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
  ignore_errors: yes

- name: Add docker apt key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add docker repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

- name: Add kubernetes apt key
  apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
    state: present

- name: Add kubernetes repository
  apt_repository:
    repo: deb https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /
    state: present

- name: Install containerd.io
  apt:
    name: containerd.io
    state: present

- name: Copy containerd config
  copy:
    dest: /etc/containerd/config.toml
    src: containerd-config.toml

- name: Restart containerd
  service:
    name: containerd
    state: restarted

- name: Install kubelet kubeadm kubectl
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: Hold package versions using apt_mark
  shell: "apt-mark hold {{ item }}"
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Enable ip forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    reload: yes

- name: Install conntrack iptables
  apt:
    name:
      - conntrack
      - iptables
    state: present

- name: Determine node type based on hostname
  set_fact:
    node_type: "{{ 'controller' if 'controller' in ansible_hostname else 'worker' }}"

- name: Copy join file to worker nodes
  copy:
    dest: /root/kubeadm_join_command
    src: "{{ stage }}-join"
  when: node_type != 'controller'

- name: Check if kubernetes is already running on worker nodes
  command: kubectl version
  register: k8s_nodes
  ignore_errors: yes
  when: node_type != 'controller'

- name: Run kubeadm join command on worker nodes if kubernetes is not running
  command: bash /root/kubeadm_join_command
  when: node_type != 'controller' and k8s_nodes.rc != 0

- name: Create .kube directory
  command: mkdir -p /root/.kube

- name: Copy kube config to user home directory
  command: cp /etc/kubernetes/kubelet.conf /root/.kube/config
  when: node_type != 'controller' and k8s_nodes.rc != 0


- name: If controller, run the tasks in files
  include_tasks: controller.yaml
  when: node_type == 'controller'